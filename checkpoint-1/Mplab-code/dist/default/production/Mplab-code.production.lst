

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jan 29 20:16:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0005                     _PORTA	set	5
   169     0009                     _PORTE	set	9
   170     0008                     _PORTD	set	8
   171     0007                     _PORTC	set	7
   172     0006                     _PORTB	set	6
   173     0085                     _TRISA	set	133
   174     0089                     _TRISE	set	137
   175     0088                     _TRISD	set	136
   176     0087                     _TRISC	set	135
   177     0086                     _TRISB	set	134
   178                           
   179                           	psect	cinit
   180     07FC                     start_initialization:	
   181                           ; #config settings
   182                           
   183     07FC                     __initialization:
   184     07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     07FC                     __end_of__initialization:
   188     07FC  0183               	clrf	3
   189     07FD  120A  118A  2F55   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192     0070                     __pcstackCOMMON:
   193     0070                     ?_initializePorts:
   194     0070                     ??_initializePorts:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0070                     ?_turnOnAllLEDs:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_turnOffAllLEDs:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     turnOnAllLEDs@port:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     turnOffAllLEDs@port:	
   210                           ; 2 bytes @ 0x0
   211                           
   212                           
   213                           ; 2 bytes @ 0x0
   214     0070                     	ds	2
   215     0072                     ??_turnOnAllLEDs:
   216     0072                     ??_turnOffAllLEDs:	
   217                           ; 1 bytes @ 0x2
   218                           
   219     0072                     ??_main:	
   220                           ; 1 bytes @ 0x2
   221                           
   222                           
   223                           ; 1 bytes @ 0x2
   224     0072                     	ds	3
   225                           
   226                           	psect	cstackBANK0
   227     0020                     __pcstackBANK0:
   228     0020                     main@portB:
   229                           
   230                           ; 2 bytes @ 0x0
   231     0020                     	ds	2
   232     0022                     main@portC:
   233                           
   234                           ; 2 bytes @ 0x2
   235     0022                     	ds	2
   236     0024                     main@portD:
   237                           
   238                           ; 2 bytes @ 0x4
   239     0024                     	ds	2
   240     0026                     main@portE:
   241                           
   242                           ; 2 bytes @ 0x6
   243     0026                     	ds	2
   244     0028                     main@portA:
   245                           
   246                           ; 2 bytes @ 0x8
   247     0028                     	ds	2
   248                           
   249                           	psect	maintext
   250     0755                     __pmaintext:	
   251 ;;
   252 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   253 ;;
   254 ;; *************** function _main *****************
   255 ;; Defined at:
   256 ;;		line 30 in file "main_function.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  portA           2    8[BANK0 ] PTR unsigned char 
   261 ;;		 -> PORTA(1), 
   262 ;;  portE           2    6[BANK0 ] PTR unsigned char 
   263 ;;		 -> PORTE(1), 
   264 ;;  portD           2    4[BANK0 ] PTR unsigned char 
   265 ;;		 -> PORTD(1), 
   266 ;;  portC           2    2[BANK0 ] PTR unsigned char 
   267 ;;		 -> PORTC(1), 
   268 ;;  portB           2    0[BANK0 ] PTR unsigned char 
   269 ;;		 -> PORTB(1), 
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : B00/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   279 ;;      Params:         0       0       0       0       0
   280 ;;      Locals:         0      10       0       0       0
   281 ;;      Temps:          3       0       0       0       0
   282 ;;      Totals:         3      10       0       0       0
   283 ;;Total ram usage:       13 bytes
   284 ;; Hardware stack levels required when called: 1
   285 ;; This function calls:
   286 ;;		_initializePorts
   287 ;;		_turnOffAllLEDs
   288 ;;		_turnOnAllLEDs
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294     0755                     _main:	
   295                           ;psect for function _main
   296                           
   297     0755                     l623:	
   298                           ;incstack = 0
   299                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   300                           
   301                           
   302                           ;main_function.c: 31:     char *portB = &PORTB;
   303     0755  3000               	movlw	0
   304     0756  1283               	bcf	3,5	;RP0=0, select bank0
   305     0757  1303               	bcf	3,6	;RP1=0, select bank0
   306     0758  00A1               	movwf	main@portB+1
   307     0759  3006               	movlw	6
   308     075A  00A0               	movwf	main@portB
   309                           
   310                           ;main_function.c: 32:     char *portC = &PORTC;
   311     075B  3000               	movlw	0
   312     075C  00A3               	movwf	main@portC+1
   313     075D  3007               	movlw	7
   314     075E  00A2               	movwf	main@portC
   315                           
   316                           ;main_function.c: 33:     char *portD = &PORTD;
   317     075F  3000               	movlw	0
   318     0760  00A5               	movwf	main@portD+1
   319     0761  3008               	movlw	8
   320     0762  00A4               	movwf	main@portD
   321                           
   322                           ;main_function.c: 34:     char *portE = &PORTE;
   323     0763  3000               	movlw	0
   324     0764  00A7               	movwf	main@portE+1
   325     0765  3009               	movlw	9
   326     0766  00A6               	movwf	main@portE
   327                           
   328                           ;main_function.c: 35:     char *portA = &PORTA;
   329     0767  3000               	movlw	0
   330     0768  00A9               	movwf	main@portA+1
   331     0769  3005               	movlw	5
   332     076A  00A8               	movwf	main@portA
   333     076B                     l625:
   334                           
   335                           ;main_function.c: 37:     initializePorts();
   336     076B  120A  118A  2745  120A  118A  	fcall	_initializePorts
   337     0770                     l627:
   338                           
   339                           ;main_function.c: 40:         turnOnAllLEDs(portB);
   340     0770  1283               	bcf	3,5	;RP0=0, select bank0
   341     0771  1303               	bcf	3,6	;RP1=0, select bank0
   342     0772  0820               	movf	main@portB,w
   343     0773  00F0               	movwf	turnOnAllLEDs@port
   344     0774  0821               	movf	main@portB+1,w
   345     0775  00F1               	movwf	turnOnAllLEDs@port+1
   346     0776  120A  118A  274D  120A  118A  	fcall	_turnOnAllLEDs
   347     077B                     l629:
   348                           
   349                           ;main_function.c: 41:         turnOnAllLEDs(portC);
   350     077B  1283               	bcf	3,5	;RP0=0, select bank0
   351     077C  1303               	bcf	3,6	;RP1=0, select bank0
   352     077D  0822               	movf	main@portC,w
   353     077E  00F0               	movwf	turnOnAllLEDs@port
   354     077F  0823               	movf	main@portC+1,w
   355     0780  00F1               	movwf	turnOnAllLEDs@port+1
   356     0781  120A  118A  274D  120A  118A  	fcall	_turnOnAllLEDs
   357     0786                     l631:
   358                           
   359                           ;main_function.c: 42:         turnOnAllLEDs(portD);
   360     0786  1283               	bcf	3,5	;RP0=0, select bank0
   361     0787  1303               	bcf	3,6	;RP1=0, select bank0
   362     0788  0824               	movf	main@portD,w
   363     0789  00F0               	movwf	turnOnAllLEDs@port
   364     078A  0825               	movf	main@portD+1,w
   365     078B  00F1               	movwf	turnOnAllLEDs@port+1
   366     078C  120A  118A  274D  120A  118A  	fcall	_turnOnAllLEDs
   367     0791                     l633:
   368                           
   369                           ;main_function.c: 43:         turnOnAllLEDs(portE);
   370     0791  1283               	bcf	3,5	;RP0=0, select bank0
   371     0792  1303               	bcf	3,6	;RP1=0, select bank0
   372     0793  0826               	movf	main@portE,w
   373     0794  00F0               	movwf	turnOnAllLEDs@port
   374     0795  0827               	movf	main@portE+1,w
   375     0796  00F1               	movwf	turnOnAllLEDs@port+1
   376     0797  120A  118A  274D  120A  118A  	fcall	_turnOnAllLEDs
   377     079C                     l635:
   378                           
   379                           ;main_function.c: 44:         turnOnAllLEDs(portA);
   380     079C  1283               	bcf	3,5	;RP0=0, select bank0
   381     079D  1303               	bcf	3,6	;RP1=0, select bank0
   382     079E  0828               	movf	main@portA,w
   383     079F  00F0               	movwf	turnOnAllLEDs@port
   384     07A0  0829               	movf	main@portA+1,w
   385     07A1  00F1               	movwf	turnOnAllLEDs@port+1
   386     07A2  120A  118A  274D  120A  118A  	fcall	_turnOnAllLEDs
   387     07A7                     l637:
   388                           
   389                           ;main_function.c: 45:         _delay((unsigned long)((500)*(20000000/4000.0)));
   390     07A7  300D               	movlw	13
   391     07A8  00F4               	movwf	??_main+2
   392     07A9  30AF               	movlw	175
   393     07AA  00F3               	movwf	??_main+1
   394     07AB  30B6               	movlw	182
   395     07AC  00F2               	movwf	??_main
   396     07AD                     u17:
   397     07AD  0BF2               	decfsz	??_main,f
   398     07AE  2FAD               	goto	u17
   399     07AF  0BF3               	decfsz	??_main+1,f
   400     07B0  2FAD               	goto	u17
   401     07B1  0BF4               	decfsz	??_main+2,f
   402     07B2  2FAD               	goto	u17
   403     07B3  0000               	nop
   404     07B4                     l639:
   405                           
   406                           ;main_function.c: 47:         turnOffAllLEDs(portB);
   407     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   408     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   409     07B6  0820               	movf	main@portB,w
   410     07B7  00F0               	movwf	turnOffAllLEDs@port
   411     07B8  0821               	movf	main@portB+1,w
   412     07B9  00F1               	movwf	turnOffAllLEDs@port+1
   413     07BA  120A  118A  273E  120A  118A  	fcall	_turnOffAllLEDs
   414     07BF                     l641:
   415                           
   416                           ;main_function.c: 48:         turnOffAllLEDs(portC);
   417     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   418     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   419     07C1  0822               	movf	main@portC,w
   420     07C2  00F0               	movwf	turnOffAllLEDs@port
   421     07C3  0823               	movf	main@portC+1,w
   422     07C4  00F1               	movwf	turnOffAllLEDs@port+1
   423     07C5  120A  118A  273E  120A  118A  	fcall	_turnOffAllLEDs
   424     07CA                     l643:
   425                           
   426                           ;main_function.c: 49:         turnOffAllLEDs(portD);
   427     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   428     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   429     07CC  0824               	movf	main@portD,w
   430     07CD  00F0               	movwf	turnOffAllLEDs@port
   431     07CE  0825               	movf	main@portD+1,w
   432     07CF  00F1               	movwf	turnOffAllLEDs@port+1
   433     07D0  120A  118A  273E  120A  118A  	fcall	_turnOffAllLEDs
   434     07D5                     l645:
   435                           
   436                           ;main_function.c: 50:         turnOffAllLEDs(portE);
   437     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   438     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   439     07D7  0826               	movf	main@portE,w
   440     07D8  00F0               	movwf	turnOffAllLEDs@port
   441     07D9  0827               	movf	main@portE+1,w
   442     07DA  00F1               	movwf	turnOffAllLEDs@port+1
   443     07DB  120A  118A  273E  120A  118A  	fcall	_turnOffAllLEDs
   444     07E0                     l647:
   445                           
   446                           ;main_function.c: 51:         turnOffAllLEDs(portA);
   447     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   448     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   449     07E2  0828               	movf	main@portA,w
   450     07E3  00F0               	movwf	turnOffAllLEDs@port
   451     07E4  0829               	movf	main@portA+1,w
   452     07E5  00F1               	movwf	turnOffAllLEDs@port+1
   453     07E6  120A  118A  273E  120A  118A  	fcall	_turnOffAllLEDs
   454     07EB                     l649:
   455                           
   456                           ;main_function.c: 52:         _delay((unsigned long)((100)*(20000000/4000.0)));
   457     07EB  3003               	movlw	3
   458     07EC  00F4               	movwf	??_main+2
   459     07ED  308A               	movlw	138
   460     07EE  00F3               	movwf	??_main+1
   461     07EF  3055               	movlw	85
   462     07F0  00F2               	movwf	??_main
   463     07F1                     u27:
   464     07F1  0BF2               	decfsz	??_main,f
   465     07F2  2FF1               	goto	u27
   466     07F3  0BF3               	decfsz	??_main+1,f
   467     07F4  2FF1               	goto	u27
   468     07F5  0BF4               	decfsz	??_main+2,f
   469     07F6  2FF1               	goto	u27
   470     07F7  2FF8               	nop2
   471     07F8  2F70               	goto	l627
   472     07F9  120A  118A  2800   	ljmp	start
   473     07FC                     __end_of_main:
   474                           
   475                           	psect	text1
   476     074D                     __ptext1:	
   477 ;; *************** function _turnOnAllLEDs *****************
   478 ;; Defined at:
   479 ;;		line 23 in file "main_function.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  port            2    0[COMMON] PTR unsigned char 
   482 ;;		 -> PORTA(1), PORTE(1), PORTD(1), PORTC(1), 
   483 ;;		 -> PORTB(1), 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, fsr0l, fsr0h
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         2       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         2       0       0       0       0
   499 ;;Total ram usage:        2 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     074D                     _turnOnAllLEDs:	
   509                           ;psect for function _turnOnAllLEDs
   510                           
   511     074D                     l619:	
   512                           ;incstack = 0
   513                           ; Regs used in _turnOnAllLEDs: [wregfsr0]
   514                           
   515                           
   516                           ;main_function.c: 24:     *port = 0xFF;
   517     074D  0870               	movf	turnOnAllLEDs@port,w
   518     074E  0084               	movwf	4
   519     074F  1783               	bsf	3,7
   520     0750  1C71               	btfss	turnOnAllLEDs@port+1,0
   521     0751  1383               	bcf	3,7
   522     0752  30FF               	movlw	255
   523     0753  0080               	movwf	0
   524     0754                     l28:
   525     0754  0008               	return
   526     0755                     __end_of_turnOnAllLEDs:
   527                           
   528                           	psect	text2
   529     073E                     __ptext2:	
   530 ;; *************** function _turnOffAllLEDs *****************
   531 ;; Defined at:
   532 ;;		line 26 in file "main_function.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  port            2    0[COMMON] PTR unsigned char 
   535 ;;		 -> PORTA(1), PORTE(1), PORTD(1), PORTC(1), 
   536 ;;		 -> PORTB(1), 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         2       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         2       0       0       0       0
   552 ;;Total ram usage:        2 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561     073E                     _turnOffAllLEDs:	
   562                           ;psect for function _turnOffAllLEDs
   563                           
   564     073E                     l621:	
   565                           ;incstack = 0
   566                           ; Regs used in _turnOffAllLEDs: [wreg-fsr0h+status,2]
   567                           
   568                           
   569                           ;main_function.c: 27:     *port = 0x00;
   570     073E  0870               	movf	turnOffAllLEDs@port,w
   571     073F  0084               	movwf	4
   572     0740  1783               	bsf	3,7
   573     0741  1C71               	btfss	turnOffAllLEDs@port+1,0
   574     0742  1383               	bcf	3,7
   575     0743  0180               	clrf	0
   576     0744                     l31:
   577     0744  0008               	return
   578     0745                     __end_of_turnOffAllLEDs:
   579                           
   580                           	psect	text3
   581     0745                     __ptext3:	
   582 ;; *************** function _initializePorts *****************
   583 ;; Defined at:
   584 ;;		line 15 in file "main_function.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		status,2
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611     0745                     _initializePorts:	
   612                           ;psect for function _initializePorts
   613                           
   614     0745                     l617:	
   615                           ;incstack = 0
   616                           ; Regs used in _initializePorts: [status,2]
   617                           
   618                           
   619                           ;main_function.c: 16:     TRISB = 0x00;
   620     0745  1683               	bsf	3,5	;RP0=1, select bank1
   621     0746  1303               	bcf	3,6	;RP1=0, select bank1
   622     0747  0186               	clrf	6	;volatile
   623                           
   624                           ;main_function.c: 17:     TRISC = 0x00;
   625     0748  0187               	clrf	7	;volatile
   626                           
   627                           ;main_function.c: 18:     TRISD = 0x00;
   628     0749  0188               	clrf	8	;volatile
   629                           
   630                           ;main_function.c: 19:     TRISE = 0x00;
   631     074A  0189               	clrf	9	;volatile
   632                           
   633                           ;main_function.c: 20:     TRISA = 0x00;
   634     074B  0185               	clrf	5	;volatile
   635     074C                     l25:
   636     074C  0008               	return
   637     074D                     __end_of_initializePorts:
   638     007E                     btemp	set	126	;btemp
   639     007E                     wtemp0	set	126
   640                           
   641                           	psect	config
   642                           
   643                           ;Config register CONFIG @ 0x2007
   644                           ;	Oscillator Selection bits
   645                           ;	FOSC = HS, HS oscillator
   646                           ;	Watchdog Timer Enable bit
   647                           ;	WDTE = OFF, WDT disabled
   648                           ;	Power-up Timer Enable bit
   649                           ;	PWRTE = OFF, PWRT disabled
   650                           ;	Brown-out Reset Enable bit
   651                           ;	BOREN = ON, BOR enabled
   652                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   653                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   654                           ;	Data EEPROM Memory Code Protection bit
   655                           ;	CPD = OFF, Data EEPROM code protection off
   656                           ;	Flash Program Memory Write Enable bits
   657                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   658                           ;	In-Circuit Debugger Mode bit
   659                           ;	DEBUG = 0x1, unprogrammed default
   660                           ;	Flash Program Memory Code Protection bit
   661                           ;	CP = OFF, Code protection off
   662     2007                     	org	8199
   663     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main@portA	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    main@portB	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    main@portC	PTR unsigned char  size(2) Largest target is 1
		 -> PORTC(SFR0[1]), 

    main@portD	PTR unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    main@portE	PTR unsigned char  size(2) Largest target is 1
		 -> PORTE(SFR0[1]), 

    turnOffAllLEDs@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 

    turnOnAllLEDs@port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), PORTB(SFR0[1]), PORTC(SFR0[1]), PORTD(SFR0[1]), 
		 -> PORTE(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_turnOffAllLEDs
    _main->_turnOnAllLEDs

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    1029
                                              2 COMMON     3     3      0
                                              0 BANK0     10    10      0
                    _initializePorts
                     _turnOffAllLEDs
                      _turnOnAllLEDs
 ---------------------------------------------------------------------------------
 (1) _turnOnAllLEDs                                        2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _turnOffAllLEDs                                       2     0      2     402
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initializePorts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initializePorts
   _turnOffAllLEDs
   _turnOnAllLEDs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jan 29 20:16:05 2024

                     l31 0744                       l25 074C                       l28 0754  
                     u17 07AD                       u27 07F1                      l621 073E  
                    l631 0786                      l623 0755                      l617 0745  
                    l641 07BF                      l633 0791                      l625 076B  
                    l619 074D                      l643 07CA                      l635 079C  
                    l627 0770                      l645 07D5                      l637 07A7  
                    l629 077B                      l647 07E0                      l639 07B4  
                    l649 07EB                      fsr0 0004                      indf 0000  
                   _main 0755                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089        ??_initializePorts 0070  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0072  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            _turnOnAllLEDs 074D               __pmaintext 0755  
        _initializePorts 0745           ?_turnOnAllLEDs 0070        turnOnAllLEDs@port 0070  
                __ptext1 074D                  __ptext2 073E                  __ptext3 0745  
   end_of_initialization 07FC  __end_of_initializePorts 074D          ??_turnOnAllLEDs 0072  
    start_initialization 07FC           _turnOffAllLEDs 073E         ?_initializePorts 0070  
              ___latbits 0002   __end_of_turnOffAllLEDs 0745            __pcstackBANK0 0020  
        ?_turnOffAllLEDs 0070                main@portA 0028                main@portB 0020  
              main@portC 0022                main@portD 0024                main@portE 0026  
  __end_of_turnOnAllLEDs 0755         ??_turnOffAllLEDs 0072       turnOffAllLEDs@port 0070  
