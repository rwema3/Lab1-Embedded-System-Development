

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jan 29 20:14:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Version 2.20
    12                           ; Generated 12/02/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0006                     _PORTBbits	set	6
   166     0007                     _PORTCbits	set	7
   167     0087                     _TRISCbits	set	135
   168     0086                     _TRISBbits	set	134
   169                           
   170                           	psect	cinit
   171     07FC                     start_initialization:	
   172                           ; #config settings
   173                           
   174     07FC                     __initialization:
   175     07FC                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178     07FC                     __end_of__initialization:
   179     07FC  0183               	clrf	3
   180     07FD  120A  118A  2FBC   	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	cstackCOMMON
   183     0070                     __pcstackCOMMON:
   184     0070                     ?_toggleLED:
   185     0070                     ??_toggleLED:	
   186                           ; 1 bytes @ 0x0
   187                           
   188     0070                     ?_main:	
   189                           ; 1 bytes @ 0x0
   190                           
   191                           
   192                           ; 1 bytes @ 0x0
   193     0070                     	ds	4
   194     0074                     toggleLED@buttonState:
   195                           
   196                           ; 1 bytes @ 0x4
   197     0074                     	ds	1
   198     0075                     ??_main:
   199     0075                     main@buttonState:	
   200                           ; 1 bytes @ 0x5
   201                           
   202                           
   203                           ; 2 bytes @ 0x5
   204     0075                     	ds	2
   205                           
   206                           	psect	maintext
   207     07BC                     __pmaintext:	
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 29 in file "checkpoint_2.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  buttonState     2    5[COMMON] int 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : B00/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   227 ;;      Params:         0       0       0       0       0
   228 ;;      Locals:         2       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0
   230 ;;      Totals:         2       0       0       0       0
   231 ;;Total ram usage:        2 bytes
   232 ;; Hardware stack levels required when called: 1
   233 ;; This function calls:
   234 ;;		_toggleLED
   235 ;; This function is called by:
   236 ;;		Startup code after reset
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240     07BC                     _main:	
   241                           ;psect for function _main
   242                           
   243     07BC                     l572:	
   244                           ;incstack = 0
   245                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   246                           
   247                           
   248                           ;checkpoint_2.c: 30:     TRISBbits.TRISB0 = 0;
   249     07BC  1683               	bsf	3,5	;RP0=1, select bank1
   250     07BD  1303               	bcf	3,6	;RP1=0, select bank1
   251     07BE  1006               	bcf	6,0	;volatile
   252                           
   253                           ;checkpoint_2.c: 31:     TRISCbits.TRISC0 = 1;
   254     07BF  1407               	bsf	7,0	;volatile
   255     07C0                     l574:
   256                           
   257                           ;checkpoint_2.c: 33:     int buttonState = 0;
   258     07C0  01F5               	clrf	main@buttonState
   259     07C1  01F6               	clrf	main@buttonState+1
   260     07C2                     l576:
   261                           
   262                           ;checkpoint_2.c: 36:         toggleLED(&buttonState);
   263     07C2  3075               	movlw	(low (main@buttonState| 0))& (0+255)
   264     07C3  120A  118A  27CC  120A  118A  	fcall	_toggleLED
   265     07C8  2FC2               	goto	l576
   266     07C9  120A  118A  2800   	ljmp	start
   267     07CC                     __end_of_main:
   268                           
   269                           	psect	text1
   270     07CC                     __ptext1:	
   271 ;; *************** function _toggleLED *****************
   272 ;; Defined at:
   273 ;;		line 15 in file "checkpoint_2.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;  buttonState     1    wreg     PTR int 
   276 ;;		 -> main@buttonState(2), 
   277 ;; Auto vars:     Size  Location     Type
   278 ;;  buttonState     1    4[COMMON] PTR int 
   279 ;;		 -> main@buttonState(2), 
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         1       0       0       0       0
   291 ;;      Temps:          4       0       0       0       0
   292 ;;      Totals:         5       0       0       0       0
   293 ;;Total ram usage:        5 bytes
   294 ;; Hardware stack levels used: 1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302     07CC                     _toggleLED:	
   303                           ;psect for function _toggleLED
   304                           
   305                           
   306                           ;incstack = 0
   307                           ; Regs used in _toggleLED: [wreg-fsr0h+status,2+status,0]
   308                           ;toggleLED@buttonState stored from wreg
   309     07CC  00F4               	movwf	toggleLED@buttonState
   310     07CD                     l566:
   311                           
   312                           ;checkpoint_2.c: 16:     if (PORTCbits.RC0 == 0) {
   313     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   314     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   315     07CF  1807               	btfsc	7,0	;volatile
   316     07D0  2FD2               	goto	u11
   317     07D1  2FD3               	goto	u10
   318     07D2                     u11:
   319     07D2  2FEB               	goto	l11
   320     07D3                     u10:
   321     07D3                     l568:
   322                           
   323                           ;checkpoint_2.c: 18:         *buttonState = !(*buttonState);
   324     07D3  0874               	movf	toggleLED@buttonState,w
   325     07D4  0084               	movwf	4
   326     07D5  0800               	movf	0,w
   327     07D6  00F0               	movwf	??_toggleLED
   328     07D7  0A84               	incf	4,f
   329     07D8  0800               	movf	0,w
   330     07D9  00F1               	movwf	??_toggleLED+1
   331     07DA  0870               	movf	??_toggleLED,w
   332     07DB  0471               	iorwf	??_toggleLED+1,w
   333     07DC  1903               	btfsc	3,2
   334     07DD  2FDF               	goto	u21
   335     07DE  2FE1               	goto	u20
   336     07DF                     u21:
   337     07DF  3001               	movlw	1
   338     07E0  2FE2               	goto	u30
   339     07E1                     u20:
   340     07E1  3000               	movlw	0
   341     07E2                     u30:
   342     07E2  00F2               	movwf	??_toggleLED+2
   343     07E3  01F3               	clrf	??_toggleLED+3
   344     07E4  0874               	movf	toggleLED@buttonState,w
   345     07E5  0084               	movwf	4
   346     07E6  0872               	movf	??_toggleLED+2,w
   347     07E7  0080               	movwf	0
   348     07E8  0A84               	incf	4,f
   349     07E9  0873               	movf	??_toggleLED+3,w
   350     07EA  0080               	movwf	0
   351     07EB                     l11:	
   352                           ;checkpoint_2.c: 19:     }
   353                           
   354                           
   355                           ;checkpoint_2.c: 22:     if (*buttonState == 1) {
   356     07EB  0874               	movf	toggleLED@buttonState,w
   357     07EC  0084               	movwf	4
   358     07ED  0800               	movf	0,w
   359     07EE  00F0               	movwf	??_toggleLED
   360     07EF  0A84               	incf	4,f
   361     07F0  0800               	movf	0,w
   362     07F1  00F1               	movwf	??_toggleLED+1
   363     07F2  0370               	decf	??_toggleLED,w
   364     07F3  0471               	iorwf	??_toggleLED+1,w
   365     07F4  1D03               	btfss	3,2
   366     07F5  2FF7               	goto	u41
   367     07F6  2FF8               	goto	u40
   368     07F7                     u41:
   369     07F7  2FFA               	goto	l12
   370     07F8                     u40:
   371     07F8                     l570:
   372                           
   373                           ;checkpoint_2.c: 23:         PORTBbits.RB0 = 1;
   374     07F8  1406               	bsf	6,0	;volatile
   375                           
   376                           ;checkpoint_2.c: 24:     } else {
   377     07F9  2FFB               	goto	l14
   378     07FA                     l12:
   379                           
   380                           ;checkpoint_2.c: 25:         PORTBbits.RB0 = 0;
   381     07FA  1006               	bcf	6,0	;volatile
   382     07FB                     l14:
   383     07FB  0008               	return
   384     07FC                     __end_of_toggleLED:
   385     007E                     btemp	set	126	;btemp
   386     007E                     wtemp0	set	126
   387                           
   388                           	psect	config
   389                           
   390                           ;Config register CONFIG @ 0x2007
   391                           ;	Oscillator Selection bits
   392                           ;	FOSC = HS, HS oscillator
   393                           ;	Watchdog Timer Enable bit
   394                           ;	WDTE = OFF, WDT disabled
   395                           ;	Power-up Timer Enable bit
   396                           ;	PWRTE = OFF, PWRT disabled
   397                           ;	Brown-out Reset Enable bit
   398                           ;	BOREN = ON, BOR enabled
   399                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   400                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   401                           ;	Data EEPROM Memory Code Protection bit
   402                           ;	CPD = OFF, Data EEPROM code protection off
   403                           ;	Flash Program Memory Write Enable bits
   404                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   405                           ;	In-Circuit Debugger Mode bit
   406                           ;	DEBUG = 0x1, unprogrammed default
   407                           ;	Flash Program Memory Code Protection bit
   408                           ;	CP = OFF, Code protection off
   409     2007                     	org	8199
   410     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    toggleLED@buttonState	PTR int  size(1) Largest target is 2
		 -> main@buttonState(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_toggleLED

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      90
                                              5 COMMON     2     2      0
                          _toggleLED
 ---------------------------------------------------------------------------------
 (1) _toggleLED                                            5     5      0      75
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _toggleLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jan 29 20:14:06 2024

                     l11 07EB                       l12 07FA                       l14 07FB  
                     u10 07D3                       u11 07D2                       u20 07E1  
                     u21 07DF                       u30 07E2                       u40 07F8  
                     u41 07F7                      l570 07F8                      l572 07BC  
                    l566 07CD                      l574 07C0                      l568 07D3  
                    l576 07C2                      fsr0 0004                      indf 0000  
                   _main 07BC                     btemp 007E                     start 0000  
                  ?_main 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07CC                   ??_main 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070     toggleLED@buttonState 0074  
             __pmaintext 07BC                  __ptext1 07CC     end_of_initialization 07FC  
      __end_of_toggleLED 07FC                _PORTBbits 0006                _PORTCbits 0007  
              _TRISBbits 0086                _TRISCbits 0087      start_initialization 07FC  
              ___latbits 0002                _toggleLED 07CC          main@buttonState 0075  
             ?_toggleLED 0070              ??_toggleLED 0070  
